name: Clojure CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: please03
          POSTGRES_USER: adm_user
          POSTGRES_DB: adm_user
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.0
        with:
          lein: 2.11.1
          clj-kondo: 2023.12.15
      - name: Install dependencies
        run: lein deps
      - name: Lint with clj-kondo
        uses: DeLaGuardo/clojure-lint-action@master
        with:
          clj-kondo-args: --lint src:test
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run ClojureScript tests
        run: lein fig:test
      - name: Set up the database
        run: lein with-profile +test do create-sql, migrate, partition 2015-01-01 2017-12-31
      - name: Run tests
        run: lein test

  tag:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Tag with the version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: tag
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: web
            image: dgknght/clj-money-web
          - target: util
            image: dgknght/clj-money-util
    env:
      DOCKER_METADATA_PR_HEAD_SHA: true
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log into docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tags and labels
        id: meta
        uses: docker/metadata-action@v5.4.0
        with:
          images: ${{ matrix.image }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=auto
            suffix=-{{sha}}

      - name: Build and push the docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: ./Dockerfile
          target: ${{ matrix.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.output.labels }}
