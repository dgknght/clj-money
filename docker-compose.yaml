---
name: clj-money
volumes:
  sql-data-17:
  maven-data:
  redis-data-8:
  init-markers:
services:

  redis:
    image: redis:8
    restart: on-failure
    ports:
      - 6379:6379
    volumes:
      - redis-data-8:/data
    command: "redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    env_file: .env

  sql:
    image: postgres:17
    restart: on-failure
    ports:
      - 5432:5432
    volumes:
      - sql-data-17:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${SQL_ADM_PASSWORD}
      POSTGRES_USER: ${SQL_ADM_USER}
      POSTGRES_DB: ${SQL_ADM_USER}
    healthcheck:
      test: pg_isready
    env_file: .env

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: test@test.com
      PGADMIN_DEFAULT_PASSWORD: please01
    ports:
      - 4040:80
    depends_on:
      sql:
        condition: service_healthy
    env_file: .env

  sql-init:
    profiles:
      - sql
    image: clj-money-util
    build:
      target: util
    command: lein with-profile util do create-sql, migrate, partition
    depends_on:
      sql:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./env/docker
        target: /usr/src/clj-money/config
        read_only: true
        bind:
          selinux: z
      - type: volume
        source: maven-data
        target: /root/.m2
    env_file: .env

  # Datomic
  #--------

  memcached:
    profiles:
      - datomic-peer
      - datomic-client
    image: memcached:1.6-bullseye
    ports:
      - 11211:11211
    restart: on-failure
    healthcheck:
      test: echo stats | nc 127.0.0.1 11211
      interval: 10s
      retries: 60

  datomic-sql-init:
    profiles:
      - datomic-peer
      - datomic-client
    image: clj-money-util
    build:
      target: util
    command: sh -c "if [ -e /init-markers/datomic-sql-init-complete ]; then rm /init-markers/*; fi && lein with-profile util create-sql && ./scripts/datomic/init.sh && touch /init-markers/datomic-sql-init-complete"
    env_file: .env
    environment:
      PGPASSWORD: ${SQL_ADM_PASSWORD}
      PGHOST: ${SQL_HOST}
      PGDATABASE: ${SQL_ADM_USER}
      PGUSER: ${SQL_ADM_USER}
    depends_on:
      sql:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./env/docker
        target: /usr/src/clj-money/config
        read_only: true
        bind:
          selinux: z
      - type: volume
        source: maven-data
        target: /root/.m2
      - type: volume
        source: init-markers
        target: /init-markers

  datomic-transactor:
    profiles:
      - datomic-peer
      - datomic-client
    depends_on:
      memcached:
        condition: service_started
    image: dgknght/datomic-pro:1.0.7075
    volumes:
      - type: bind
        source: ./env/docker/ # TODO: Should this be a separate folder?
        target: /opt/datomic-pro/config
        read_only: true
      - type: volume
        source: init-markers
        target: /init-markers
    command: sh -c "while [ ! -e /init-markers/datomic-sql-init-complete ]; do echo 'waiting for datomic sql init...'; sleep 5s; done && ./bin/transactor -Xmx2g -Xms1g ./config/transactor.properties"
    restart: on-failure
    ports:
      - 4334:4334
      - 9999:9999
    healthcheck:
      test: wget localhost:9999/health
    env_file: .env

  datomic-schema:
    profiles:
      - datomic-peer
      - datomic-client
    image: clj-money-util
    build:
      target: util
    command: sh -c "while [ ! -e /init-markers/datomic-sql-init-complete ]; do echo 'waiting for datomic sql init...'; sleep 5s; done && lein with-profile util datomic-schema && touch /init-markers/datomic-schema-complete"
    volumes:
      - type: bind
        source: ./env/docker
        target: /usr/src/clj-money/config
        read_only: true
      - type: volume
        source: maven-data
        target: /root/.m2
      - type: volume
        source: init-markers
        target: /init-markers
    depends_on:
      datomic-transactor:
        condition: service_healthy
    env_file: .env

  datomic-console:
    profiles:
      - datomic-peer
      - datomic-client
    image: dgknght/datomic-pro:1.0.7075
    depends_on:
      datomic-transactor:
        condition: service_healthy
    restart: on-failure
    ports:
      - 4050:8080
    command: sh -c "while [ ! -e /init-markers/datomic-schema-complete ]; do echo 'waiting for datomic schema...'; sleep 5s; done && ./bin/console -p '8080' sql '${DATOMIC_NO_DB_URI}'"
    volumes:
      - type: volume
        source: init-markers
        target: /init-markers
    env_file: .env

  datomic-peer-server:
    profiles:
      - datomic-client
    depends_on:
      datomic-schema:
        condition: service_completed_successfully
    image: dgknght/datomic-pro:1.0.7075
    restart: on-failure
    volumes:
      - type: bind
        source: ./logs/datomic-peer-server
        target: /opt/datomic-pro/log
        read_only: false
      - type: volume
        source: init-markers
        target: /init-markers
    ports:
      - 4060:8998
    command:
      - ./bin/run
      - -m
      - datomic.peer-server
      - -h
      - "${DATOMIC_PEER_SERVER}"
      - -p
      - "8998"
      - -Ddatomic.memcachedServers=memcached:11211
      - -a
      - "${DATOMIC_ACCESS_KEY},${DATOMIC_SECRET}"
      - -d
      - "${DATOMIC_DB_NAME},${DATOMIC_STORAGE_URI}"
    env_file: .env
    healthcheck:
      test: ["CMD", "curl", "-k", "https://localhost:8998/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
